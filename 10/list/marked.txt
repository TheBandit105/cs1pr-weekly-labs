Trying to build with the prescribed API
gcc -Wall -g3 /mnt/10/./list/test/main.c list.c -I.
/mnt/10/./list/test/main.c: In function 'traversefunc':
/mnt/10/./list/test/main.c:8:18: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   printf("%d\n", (int) data);
                  ^
/mnt/10/./list/test/main.c:9:14: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   counter += (int) data;
              ^
/mnt/10/./list/test/main.c: In function 'main':
/mnt/10/./list/test/main.c:20:27: warning: passing argument 1 of 'list_init' makes pointer from integer without a cast [-Wint-conversion]
   list_t * l1 = list_init(1);
                           ^
In file included from /mnt/10/./list/test/main.c:3:0:
./list.h:9:10: note: expected 'void *' but argument is of type 'int'
 list_t * list_init(void * value);
          ^~~~~~~~~
/mnt/10/./list/test/main.c:25:33: warning: passing argument 2 of 'list_append' makes pointer from integer without a cast [-Wint-conversion]
   list_t * l2 = list_append(l1, 2);
                                 ^
In file included from /mnt/10/./list/test/main.c:3:0:
./list.h:19:10: note: expected 'void *' but argument is of type 'int'
 list_t * list_append(list_t * lst, void* value);
          ^~~~~~~~~~~
/mnt/10/./list/test/main.c:29:33: warning: passing argument 2 of 'list_append' makes pointer from integer without a cast [-Wint-conversion]
   list_t * l3 = list_append(l2, 3);
                                 ^
In file included from /mnt/10/./list/test/main.c:3:0:
./list.h:19:10: note: expected 'void *' but argument is of type 'int'
 list_t * list_append(list_t * lst, void* value);
          ^~~~~~~~~~~
OK!
==33== Memcheck, a memory error detector
==33== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==33== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==33== Command: ./a.out
==33== 
Checking list_append and size
Size works
Checking right and left
Checking list_iterate_fwd
86171872
86171968
Iteration doesn't produce the expected data
Iteration doesn't produce the expected data
Checking list_unlink in combination with list_iterate_fwd
86171968
Iteration doesn't produce the expected data
Ok
9/12 marks
==33== 
==33== HEAP SUMMARY:
==33==     in use at exit: 24 bytes in 1 blocks
==33==   total heap usage: 4 allocs, 3 frees, 4,168 bytes allocated
==33== 
==33== LEAK SUMMARY:
==33==    definitely lost: 24 bytes in 1 blocks
==33==    indirectly lost: 0 bytes in 0 blocks
==33==      possibly lost: 0 bytes in 0 blocks
==33==    still reachable: 0 bytes in 0 blocks
==33==         suppressed: 0 bytes in 0 blocks
==33== Rerun with --leak-check=full to see details of leaked memory
==33== 
==33== For counts of detected and suppressed errors, rerun with: -v
==33== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
